import polling_server
import traceback
import unity_client
import unity_connection

class UnityClientService(polling_server.PollingSlaveService):
    def execute(self, text):
        unity_client.log('Executing {}'.format(text))
        try:
            super(UnityClientService, self).execute(text)
        except Exception, e:
            # reformat the text to have line numbers (which start at 1, not 0)
            lines = text.split("\n")
            line_pairs = enumerate(lines)
            numbered_lines = [ "{}\t{}".format(lineno + 1, linetext) for (lineno, linetext) in line_pairs ]
            unity_client.exception("Exception while executing:\n{}\n\n".format("\n".join(numbered_lines)), e)

    def on_server_stop(self, terminate_client):
        unity_client.log('Got on_server_stop. terminate_client = {}'.format(terminate_client))
        try:
            if terminate_client:
                print('Terminating client')
                unity_client.terminate()
            else:
                print('Resetting the connection')
                unity_connection.reset_unity_connection()
        except Exception, e:
            unity_client.exception('Terminating client got an exception', e)
